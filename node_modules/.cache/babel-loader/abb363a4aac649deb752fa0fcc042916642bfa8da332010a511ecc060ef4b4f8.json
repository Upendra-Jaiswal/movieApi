{"ast":null,"code":"var _jsxFileName = \"/Users/upendra/Desktop/developer/practice/ReactJsUdemyMaximillian/module14HttpApi/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const fetchMov = () => {\n    fetch('https://swapi.dev/api/films/').then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedData = data.results.map(movData => {\n        return {\n          title: movData.title,\n          id: movData.episode_id,\n          releaseDate: movData.re\n        };\n      });\n      console.log(data.results);\n      setMovies(transformedData);\n    });\n  };\n  const dummyMovies = [{\n    id: 1,\n    title: 'Some Dummy Movie',\n    openingText: 'This is the opening text of the movie',\n    releaseDate: '2021-05-18'\n  }, {\n    id: 2,\n    title: 'Some Dummy Movie 2',\n    openingText: 'This is the second opening text of the movie',\n    releaseDate: '2021-05-19'\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMov,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MNzDXi73PHMFejepsmkrc3nun9I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MoviesList","useState","jsxDEV","_jsxDEV","App","_s","movies","setMovies","fetchMov","fetch","then","response","json","data","transformedData","results","map","movData","title","id","episode_id","releaseDate","re","console","log","dummyMovies","openingText","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/upendra/Desktop/developer/practice/ReactJsUdemyMaximillian/module14HttpApi/01-starting-project/src/App.js"],"sourcesContent":["import React from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [movies,setMovies]=useState([]);\n\n  const fetchMov=()=>{\n\n    fetch('https://swapi.dev/api/films/').then((response)=>{\n      return response.json()\n    }).then((data)=>{\n\n      const transformedData = data.results.map((movData)=>{\n        return{\n        title:movData.title,\n        id:movData.episode_id,\n        releaseDate:movData.re\n    }} )\n     console.log(data.results);\n     setMovies(transformedData);\n    })\n\n  }\n\n  \n  const dummyMovies = [\n    {\n      id: 1,\n      title: 'Some Dummy Movie',\n      openingText: 'This is the opening text of the movie',\n      releaseDate: '2021-05-18',\n    },\n    {\n      id: 2,\n      title: 'Some Dummy Movie 2',\n      openingText: 'This is the second opening text of the movie',\n      releaseDate: '2021-05-19',\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMov}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMO,QAAQ,GAACA,CAAA,KAAI;IAEjBC,KAAK,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAG;MACrD,OAAOA,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAG;MAEd,MAAMC,eAAe,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,OAAO,IAAG;QAClD,OAAM;UACNC,KAAK,EAACD,OAAO,CAACC,KAAK;UACnBC,EAAE,EAACF,OAAO,CAACG,UAAU;UACrBC,WAAW,EAACJ,OAAO,CAACK;QACxB,CAAC;MAAA,CAAC,CAAE;MACHC,OAAO,CAACC,GAAG,CAACX,IAAI,CAACE,OAAO,CAAC;MACzBR,SAAS,CAACO,eAAe,CAAC;IAC3B,CAAC,CAAC;EAEJ,CAAC;EAGD,MAAMW,WAAW,GAAG,CAClB;IACEN,EAAE,EAAE,CAAC;IACLD,KAAK,EAAE,kBAAkB;IACzBQ,WAAW,EAAE,uCAAuC;IACpDL,WAAW,EAAE;EACf,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLD,KAAK,EAAE,oBAAoB;IAC3BQ,WAAW,EAAE,8CAA8C;IAC3DL,WAAW,EAAE;EACf,CAAC,CACF;EAED,oBACElB,OAAA,CAACJ,KAAK,CAAC4B,QAAQ;IAAAC,QAAA,gBACbzB,OAAA;MAAAyB,QAAA,eACEzB,OAAA;QAAQ0B,OAAO,EAAErB,QAAS;QAAAoB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eACV9B,OAAA;MAAAyB,QAAA,eACEzB,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEA;MAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAErB;AAAC5B,EAAA,CAhDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}